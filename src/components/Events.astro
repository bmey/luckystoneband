---
import Section from "../layouts/Section.astro";
import { Event, EventProps } from "./Event";

const events: EventProps[] = [
  {
    facebookEventId: "2101303476950123",
    locationName: "Mayfest @ Corbit Library",
    address: "Odessa, DE",
    date: "2025-05-03",
    startTime: "10 am",
  } as EventProps,
  {
    facebookEventId: "1212373316671146",
    locationName: "Deer Park Tavern",
    address: "Newark, DE",
    date: "2025-05-23",
    startTime: "10 pm",
  } as EventProps,
  {
    facebookEventId: "1031581568839886",
    locationName: "Klondike Kate's Saloon",
    address: "Newark, DE",
    date: "2025-06-07",
    startTime: "9 pm",
  } as EventProps,
  {
    facebookEventId: "1279648469941191",
    locationName: "The Beer Garden at Whitehall",
    address: "Middletown, DE",
    date: "2025-08-08",
    startTime: "7 pm",
  } as EventProps,
  {
    facebookEventId: "",
    locationName: "Private Event",
    address: "NJ",
    date: "2025-08-30",
    startTime: "5 pm",
  } as EventProps,
  {
    facebookEventId: "1293836828703632",
    locationName: "The Beer Garden at Whitehall",
    address: "Middletown, DE",
    date: "2025-09-06",
    startTime: "7 pm",
  } as EventProps,
  {
    facebookEventId: "",
    locationName: "Fall Fair @ Corbit Library",
    address: "Odessa, DE",
    date: "2025-11-01",
    startTime: "11 am",
  } as EventProps,
  {
    facebookEventId: "661642203055338",
    locationName: "Deer Park Tavern",
    address: "Newark, DE",
    date: "2025-11-07",
    startTime: "10 pm",
  } as EventProps,
].sort((a, b) => (a.date < b.date ? -1 : 1));
---

<Section id="Events" title="Events">
  <div class="content">
    {events.map((event) => <Event {...event} client:only />)}

    <div class="past">
      <a href="https://www.facebook.com/luckystoneband/past_hosted_events"
        >See past events</a
      >
    </div>
  </div>
</Section>

<style>
  .content {
    max-width: 800px;
    margin: 0 auto;
  }
  .past {
    display: flex;
    margin: 3rem;
    justify-content: center;
  }
  a {
    background: transparent;
    border: none;
    color: var(--primary);
    cursor: pointer;
    font-size: 1.25rem;
    line-height: 1rem;
    padding: 0;
    text-decoration-color: rgba(var(--primaryRGB), 0.5);
    text-decoration-line: underline;
    text-decoration-thickness: 0.5px;
    text-underline-offset: 0.5rem;
    transition: all 0.3s ease;
  }

  a:hover,
  a:focus {
    color: var(--color-light);
    line-height: 1rem;
    text-decoration-color: rgba(var(--primaryRGB), 0.9);
  }

  /* TODO: style child react component in a better way */
  :global(.event) {
    margin: 2rem 0;
    padding: 1rem 2rem;
    background-color: rgba(var(--color-primary-dark2-rgb), 0.4);
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: all 0.3s ease;
  }
  :global(.event > :not(:last-child)) {
    flex: 1;
  }
  :global(.event .subtext) {
    font-size: 0.8rem;
    font-weight: 400;
    color: rgba(var(--color-light-rgb), 0.8);
    text-align: left;
  }
  @media only screen and (max-width: 800px) {
    :global(.event) {
      flex-direction: column;
      text-align: center;
    }

    :global(.event .header) {
      margin: 0 0 1rem;
    }

    :global(.event .date) {
      font-size: 1.75rem;
    }

    :global(.event .location) {
      background: radial-gradient(
        closest-side,
        rgba(var(--color-light-rgb), 0.15),
        transparent
      );
      width: 100%;
      display: flex;
      justify-content: center;
      padding: 1rem;
    }

    :global(.event .start-time) {
      text-align: center;
      font-size: 1.125rem;
    }
  }
  :global(.event .location) {
    flex: 1.25;
    white-space: nowrap;
  }
  :global(.event .date) {
    font-weight: bold;
    font-size: 1.5rem;
  }
  :global(.event .header) {
    display: flex;
    align-items: center;
  }
  :global(.event .location-name) {
    font-size: 1.125rem;
    font-weight: bold;
  }
  :global(.event .header i) {
    margin-right: 0.75rem;
  }
  :global(.event .link) {
    background: transparent;
    border: 2px solid var(--primary);
    border-radius: 50px;
    color: var(--primary);
    cursor: pointer;
    padding: 0.5rem 1rem;
    text-decoration: none;
    text-transform: uppercase;
    transition: all 0.3s ease;
  }

  :global(.event:hover),
  :global(.event:focus) {
    background-color: rgba(var(--color-primary-dark2-rgb), 0.55);
  }
  :global(.event:hover .link),
  :global(.event:focus .link) {
    background: rgba(var(--color-primary-dark2-rgb), 0.9);
    border-color: var(--color-light);
    color: var(--color-light);
  }
</style>
